{"version":3,"file":"static/js/485.edb1f097.chunk.js","mappings":"qMAEaA,E,OAAgBC,GAAAA,IAAH,8Q,SCEbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,iBAAiB,0BACjBC,WAAW,UACXC,MAAM,aAIb,C,sKCjBYC,EAAmBV,EAAAA,GAAAA,QAAH,gDAIhBW,EAAgBX,EAAAA,GAAAA,GAAH,oOAgBbY,EAAeZ,EAAAA,GAAAA,GAAH,uL,kBC0BzB,EA1Ca,WACX,OAAoCa,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,sGAEpBN,GAAa,GAFO,UAGDO,EAAAA,EAAAA,MAHC,OAGdC,EAHc,OAIdX,EAAaW,EAAKC,QAExBX,EAAcD,GANM,gDAQpBK,EAAS,KAAMQ,SARK,yBAUpBV,GAAa,GAVO,4EAAH,qDAcrBM,GACD,GAAE,KAGD,UAACb,EAAD,WACGQ,IAAS,uBAAG,gCACZF,IAAa,SAACf,EAAA,EAAD,KACZ,wBAAI,oBACN,SAACU,EAAD,UACGG,EAAWc,KAAI,SAAAC,GAAK,OACnB,SAACjB,EAAD,WACE,SAAC,KAAD,CAAMkB,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMb,GAA/C,SACGS,EAAMK,SAFQL,EAAME,GADN,QAU5B,C","sources":["components/Loader/Loader.stuled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;","import React from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.stuled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <MagnifyingGlass\n        visible={true}\n        height=\"200\"\n        width=\"200\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#3f51b5\"\n      />\n    </LoaderWrapper>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const SectionTopMovies = styled.section`\n  margin-bottom: 20px;\n`;\n\nexport const ListTopMovies = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  & a{\n    display: inline-block;\n    width: 100%;\n    text-decoration: none;\n    color: grey;\n    &:hover{\n      color: black;\n    }\n\n  }\n`;\n\nexport const TopMovieItem = styled.li`\n  margin-bottom: 10px;\n  background-color: #fff;\n  border-radius: 4px;\n  width: 25%;\n  &:hover{\n    background-color: orange;\n    cursor: pointer;\n  }\n`;\n\n// export const SectionTopMovies = styled.section`\n//   padding: 20px;\n//   width: 1440px;\n//   margin: 0 auto;\n//   background-color: #fff;\n// `;\n\n// export const Title = styled.h1`\n//   margin-bottom: 20px;\n//   font-size: 40px;\n//   font-weight: 700;\n//   color: black;\n// `;\n\n// export const ListTopMovies = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 8px;\n//   li {\n//     font-size: 18px;\n//     font-weight: 600;\n//   }\n// `;\n","import { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getTopMovies } from 'fetch_api/fetch_api';\nimport { SectionTopMovies, ListTopMovies, TopMovieItem } from './Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [listMovies, setListMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchListMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getTopMovies();\n        const listMovies = data.results;\n\n        setListMovies(listMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchListMovies();\n  }, []);\n\n  return (\n    <SectionTopMovies>\n      {error && <p>Sorry, something went wrong</p>}\n      {isLoading && <Loader />}\n        <h1>Trending today</h1>\n      <ListTopMovies>\n        {listMovies.map(movie => (\n          <TopMovieItem key={movie.id}>\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </TopMovieItem>\n        ))}\n      </ListTopMovies>\n    </SectionTopMovies>\n  );\n};\n\nexport default Home;\n"],"names":["LoaderWrapper","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClassName","glassColor","color","SectionTopMovies","ListTopMovies","TopMovieItem","useState","listMovies","setListMovies","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","fetchListMovies","getTopMovies","data","results","message","map","movie","to","id","state","from","title"],"sourceRoot":""}