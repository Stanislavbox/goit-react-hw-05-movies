{"version":3,"file":"static/js/691.6157365e.chunk.js","mappings":"qMAEaA,E,OAAgBC,GAAAA,IAAH,8Q,SCEbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,iBAAiB,0BACjBC,WAAW,UACXC,MAAM,aAIb,C,yLCjBYC,EAAgBV,EAAAA,GAAAA,IAAH,0CAIbW,EAAaX,EAAAA,GAAAA,KAAH,+CAIVY,EAAoBZ,EAAAA,GAAAA,IAAH,8FAMjBa,EAAkBb,EAAAA,GAAAA,EAAH,6DAKfc,EAAcd,EAAAA,GAAAA,MAAH,yFAMXe,EAAcf,EAAAA,GAAAA,MAAH,+GAOXgB,EAAYhB,EAAAA,GAAAA,GAAH,+RAgBTiB,EAAYjB,EAAAA,GAAAA,GAAH,+N,SCiCtB,EApEe,WAAO,IAAD,EACnB,GAAsCkB,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGX,EAAYY,IAAI,oBAAnB,QAAmC,GAC5CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfV,GAAa,GAFE,UAGIW,EAAAA,EAAAA,IAASN,GAHb,OAGTO,EAHS,OAIfd,EAASc,EAAKC,SACc,IAAxBD,EAAKC,QAAQC,OACfZ,EAAS,UAAD,OAAWG,EAAX,gBAERH,EAAS,MARI,gDAWfA,EAAS,KAAMa,SAXA,yBAaff,GAAa,GAbE,4EAAH,qDAiBXG,GACHO,GAEH,GAAE,CAACP,EAAcE,IAWlB,OACE,UAACpB,EAAD,WACGc,IAAa,SAACvB,EAAA,EAAD,KAEd,UAACU,EAAD,YACE,SAACG,EAAD,UAAa,kBACb,SAACC,EAAD,CAAa0B,KAAK,OAAOC,MAAOZ,EAAWa,SAf5B,SAAAC,GACnB,IAAMC,EAAiBD,EAAIE,OAAOJ,MAClC,GAAuB,KAAnBG,EACF,OAAOzB,EAAe,CAAC,GAEzBA,EAAe,CAAEU,UAAWe,IAC5BhB,GAAgB,EACjB,KASOD,GAAgBF,IAChB,SAACd,EAAD,WACE,UAACC,EAAD,WAAiB,SAAOiB,EAAU,sBAKxC,SAACd,EAAD,UACGM,EAAOyB,KAAI,SAAAC,GAAK,OACf,SAAC/B,EAAD,WACE,SAAC,KAAD,CAAMgC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMpB,GAAxC,SACGgB,EAAMK,SAFKL,EAAME,GADP,QAUxB,C","sources":["components/Loader/Loader.stuled.js","components/Loader/Loader.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;","import React from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.stuled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <MagnifyingGlass\n        visible={true}\n        height=\"200\"\n        width=\"200\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#3f51b5\"\n      />\n    </LoaderWrapper>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const MoviesWrapper = styled.div`\n  display: flex;\n`;\n\nexport const SearchForm = styled.form`\n  margin-right: 50px;\n`;\n\nexport const NotFoundContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const NotFoundMessage = styled.p`\n  color: red;\n  font-weight: bold;\n`;\n\nexport const SearchLabel = styled.label`\n  display: block;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 14px;\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  width: 100%;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n  & a{\n    display: block;\n    text-decoration: none;\n    color: grey;\n    text-align: center\n    \n  }\n`;\n\nexport const MovieItem = styled.li`\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  &:hover{\n    background-color: orange;\n    & a{\n      color: black;\n    }\n  }\n`;","import { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { getMovie } from 'fetch_api/fetch_api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  MovieList,\n  MovieItem,\n  MoviesWrapper,\n  SearchForm,\n  SearchLabel,\n  SearchInput,\n  NotFoundMessage,\n  NotFoundContainer,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useSearchParams();\n  const [movies, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isInputEmpty, setIsInputEmpty] = useState(true);\n  const movieName = searchMovie.get('movieName') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovie(movieName);\n        setMovie(data.results);\n        if (data.results.length === 0) {\n          setError(`Movie '${movieName}' not found`);\n        } else {\n          setError(null);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (!isInputEmpty) {\n      fetchMovie();\n    }\n  }, [isInputEmpty, movieName]);\n\n  const handleSearch = evt => {\n    const movieNameValue = evt.target.value;\n    if (movieNameValue === '') {\n      return setSearchMovie({});\n    }\n    setSearchMovie({ movieName: movieNameValue });\n    setIsInputEmpty(false);\n  };\n\n  return (\n    <MoviesWrapper>\n      {isLoading && <Loader />}\n\n      <SearchForm>\n        <SearchLabel>Movie search</SearchLabel>\n        <SearchInput type=\"text\" value={movieName} onChange={handleSearch} />\n        {!isInputEmpty && error && (\n          <NotFoundContainer>\n            <NotFoundMessage>Movie {movieName} not found</NotFoundMessage>\n          </NotFoundContainer>\n        )}\n      </SearchForm>\n\n      <MovieList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </MoviesWrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["LoaderWrapper","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClassName","glassColor","color","MoviesWrapper","SearchForm","NotFoundContainer","NotFoundMessage","SearchLabel","SearchInput","MovieList","MovieItem","useSearchParams","searchMovie","setSearchMovie","useState","movies","setMovie","isLoading","setIsLoading","error","setError","isInputEmpty","setIsInputEmpty","movieName","get","location","useLocation","useEffect","fetchMovie","getMovie","data","results","length","message","type","value","onChange","evt","movieNameValue","target","map","movie","to","id","state","from","title"],"sourceRoot":""}